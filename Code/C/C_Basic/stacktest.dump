
stacktest:     file format elf64-x86-64


Disassembly of section .init:

0000000000400390 <_init>:
  400390:	48 83 ec 08          	sub    $0x8,%rsp
  400394:	e8 73 00 00 00       	callq  40040c <call_gmon_start>
  400399:	e8 02 01 00 00       	callq  4004a0 <frame_dummy>
  40039e:	e8 6d 02 00 00       	callq  400610 <__do_global_ctors_aux>
  4003a3:	48 83 c4 08          	add    $0x8,%rsp
  4003a7:	c3                   	retq   

Disassembly of section .plt:

00000000004003a8 <printf@plt-0x10>:
  4003a8:	ff 35 8a 05 20 00    	pushq  0x20058a(%rip)        # 600938 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003ae:	ff 25 8c 05 20 00    	jmpq   *0x20058c(%rip)        # 600940 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003b4:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003b8 <printf@plt>:
  4003b8:	ff 25 8a 05 20 00    	jmpq   *0x20058a(%rip)        # 600948 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003be:	68 00 00 00 00       	pushq  $0x0
  4003c3:	e9 e0 ff ff ff       	jmpq   4003a8 <_init+0x18>

00000000004003c8 <__libc_start_main@plt>:
  4003c8:	ff 25 82 05 20 00    	jmpq   *0x200582(%rip)        # 600950 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003ce:	68 01 00 00 00       	pushq  $0x1
  4003d3:	e9 d0 ff ff ff       	jmpq   4003a8 <_init+0x18>

Disassembly of section .text:

00000000004003e0 <_start>:
  4003e0:	31 ed                	xor    %ebp,%ebp
  4003e2:	49 89 d1             	mov    %rdx,%r9
  4003e5:	5e                   	pop    %rsi
  4003e6:	48 89 e2             	mov    %rsp,%rdx
  4003e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4003ed:	50                   	push   %rax
  4003ee:	54                   	push   %rsp
  4003ef:	49 c7 c0 70 05 40 00 	mov    $0x400570,%r8
  4003f6:	48 c7 c1 80 05 40 00 	mov    $0x400580,%rcx
  4003fd:	48 c7 c7 00 05 40 00 	mov    $0x400500,%rdi
  400404:	e8 bf ff ff ff       	callq  4003c8 <__libc_start_main@plt>
  400409:	f4                   	hlt    
  40040a:	90                   	nop
  40040b:	90                   	nop

000000000040040c <call_gmon_start>:
  40040c:	48 83 ec 08          	sub    $0x8,%rsp
  400410:	48 8b 05 11 05 20 00 	mov    0x200511(%rip),%rax        # 600928 <_DYNAMIC+0x190>
  400417:	48 85 c0             	test   %rax,%rax
  40041a:	74 02                	je     40041e <call_gmon_start+0x12>
  40041c:	ff d0                	callq  *%rax
  40041e:	48 83 c4 08          	add    $0x8,%rsp
  400422:	c3                   	retq   
  400423:	90                   	nop
  400424:	90                   	nop
  400425:	90                   	nop
  400426:	90                   	nop
  400427:	90                   	nop
  400428:	90                   	nop
  400429:	90                   	nop
  40042a:	90                   	nop
  40042b:	90                   	nop
  40042c:	90                   	nop
  40042d:	90                   	nop
  40042e:	90                   	nop
  40042f:	90                   	nop

0000000000400430 <__do_global_dtors_aux>:
  400430:	55                   	push   %rbp
  400431:	48 89 e5             	mov    %rsp,%rbp
  400434:	53                   	push   %rbx
  400435:	48 83 ec 08          	sub    $0x8,%rsp
  400439:	80 3d 20 05 20 00 00 	cmpb   $0x0,0x200520(%rip)        # 600960 <completed.6349>
  400440:	75 4b                	jne    40048d <__do_global_dtors_aux+0x5d>
  400442:	bb 88 07 60 00       	mov    $0x600788,%ebx
  400447:	48 8b 05 1a 05 20 00 	mov    0x20051a(%rip),%rax        # 600968 <dtor_idx.6351>
  40044e:	48 81 eb 80 07 60 00 	sub    $0x600780,%rbx
  400455:	48 c1 fb 03          	sar    $0x3,%rbx
  400459:	48 83 eb 01          	sub    $0x1,%rbx
  40045d:	48 39 d8             	cmp    %rbx,%rax
  400460:	73 24                	jae    400486 <__do_global_dtors_aux+0x56>
  400462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400468:	48 83 c0 01          	add    $0x1,%rax
  40046c:	48 89 05 f5 04 20 00 	mov    %rax,0x2004f5(%rip)        # 600968 <dtor_idx.6351>
  400473:	ff 14 c5 80 07 60 00 	callq  *0x600780(,%rax,8)
  40047a:	48 8b 05 e7 04 20 00 	mov    0x2004e7(%rip),%rax        # 600968 <dtor_idx.6351>
  400481:	48 39 d8             	cmp    %rbx,%rax
  400484:	72 e2                	jb     400468 <__do_global_dtors_aux+0x38>
  400486:	c6 05 d3 04 20 00 01 	movb   $0x1,0x2004d3(%rip)        # 600960 <completed.6349>
  40048d:	48 83 c4 08          	add    $0x8,%rsp
  400491:	5b                   	pop    %rbx
  400492:	c9                   	leaveq 
  400493:	c3                   	retq   
  400494:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40049b:	00 00 00 00 00 

00000000004004a0 <frame_dummy>:
  4004a0:	48 83 3d e8 02 20 00 	cmpq   $0x0,0x2002e8(%rip)        # 600790 <__JCR_END__>
  4004a7:	00 
  4004a8:	55                   	push   %rbp
  4004a9:	48 89 e5             	mov    %rsp,%rbp
  4004ac:	74 12                	je     4004c0 <frame_dummy+0x20>
  4004ae:	b8 00 00 00 00       	mov    $0x0,%eax
  4004b3:	48 85 c0             	test   %rax,%rax
  4004b6:	74 08                	je     4004c0 <frame_dummy+0x20>
  4004b8:	bf 90 07 60 00       	mov    $0x600790,%edi
  4004bd:	c9                   	leaveq 
  4004be:	ff e0                	jmpq   *%rax
  4004c0:	c9                   	leaveq 
  4004c1:	c3                   	retq   
  4004c2:	90                   	nop
  4004c3:	90                   	nop

00000000004004c4 <p1>:
  4004c4:	55                   	push   %rbp
  4004c5:	48 89 e5             	mov    %rsp,%rbp
  4004c8:	48 83 ec 10          	sub    $0x10,%rsp
  4004cc:	89 f8                	mov    %edi,%eax
  4004ce:	88 45 fc             	mov    %al,-0x4(%rbp)
  4004d1:	0f be 55 fc          	movsbl -0x4(%rbp),%edx
  4004d5:	b8 68 06 40 00       	mov    $0x400668,%eax
  4004da:	89 d6                	mov    %edx,%esi
  4004dc:	48 89 c7             	mov    %rax,%rdi
  4004df:	b8 00 00 00 00       	mov    $0x0,%eax
  4004e4:	e8 cf fe ff ff       	callq  4003b8 <printf@plt>
  4004e9:	c9                   	leaveq 
  4004ea:	c3                   	retq   

00000000004004eb <p2>:
  4004eb:	55                   	push   %rbp
  4004ec:	48 89 e5             	mov    %rsp,%rbp
  4004ef:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4004f2:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4004f5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4004f8:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4004fb:	8d 04 02             	lea    (%rdx,%rax,1),%eax
  4004fe:	c9                   	leaveq 
  4004ff:	c3                   	retq   

0000000000400500 <main>:
  400500:	55                   	push   %rbp
  400501:	48 89 e5             	mov    %rsp,%rbp
  400504:	53                   	push   %rbx
  400505:	48 83 ec 18          	sub    $0x18,%rsp
  400509:	c6 45 e3 61          	movb   $0x61,-0x1d(%rbp)
  40050d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
  400514:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%rbp)
  40051b:	0f be 45 e3          	movsbl -0x1d(%rbp),%eax
  40051f:	89 c7                	mov    %eax,%edi
  400521:	e8 9e ff ff ff       	callq  4004c4 <p1>
  400526:	8b 55 e8             	mov    -0x18(%rbp),%edx
  400529:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40052c:	89 d6                	mov    %edx,%esi
  40052e:	89 c7                	mov    %eax,%edi
  400530:	e8 b6 ff ff ff       	callq  4004eb <p2>
  400535:	89 45 ec             	mov    %eax,-0x14(%rbp)
  400538:	b8 6c 06 40 00       	mov    $0x40066c,%eax
  40053d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  400540:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  400543:	8b 5d ec             	mov    -0x14(%rbp),%ebx
  400546:	89 de                	mov    %ebx,%esi
  400548:	48 89 c7             	mov    %rax,%rdi
  40054b:	b8 00 00 00 00       	mov    $0x0,%eax
  400550:	e8 63 fe ff ff       	callq  4003b8 <printf@plt>
  400555:	b8 00 00 00 00       	mov    $0x0,%eax
  40055a:	48 83 c4 18          	add    $0x18,%rsp
  40055e:	5b                   	pop    %rbx
  40055f:	c9                   	leaveq 
  400560:	c3                   	retq   
  400561:	90                   	nop
  400562:	90                   	nop
  400563:	90                   	nop
  400564:	90                   	nop
  400565:	90                   	nop
  400566:	90                   	nop
  400567:	90                   	nop
  400568:	90                   	nop
  400569:	90                   	nop
  40056a:	90                   	nop
  40056b:	90                   	nop
  40056c:	90                   	nop
  40056d:	90                   	nop
  40056e:	90                   	nop
  40056f:	90                   	nop

0000000000400570 <__libc_csu_fini>:
  400570:	f3 c3                	repz retq 
  400572:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400579:	1f 84 00 00 00 00 00 

0000000000400580 <__libc_csu_init>:
  400580:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400585:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40058a:	48 8d 2d db 01 20 00 	lea    0x2001db(%rip),%rbp        # 60076c <__init_array_end>
  400591:	4c 8d 25 d4 01 20 00 	lea    0x2001d4(%rip),%r12        # 60076c <__init_array_end>
  400598:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40059d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4005a2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4005a7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4005ac:	48 83 ec 38          	sub    $0x38,%rsp
  4005b0:	4c 29 e5             	sub    %r12,%rbp
  4005b3:	41 89 fd             	mov    %edi,%r13d
  4005b6:	49 89 f6             	mov    %rsi,%r14
  4005b9:	48 c1 fd 03          	sar    $0x3,%rbp
  4005bd:	49 89 d7             	mov    %rdx,%r15
  4005c0:	e8 cb fd ff ff       	callq  400390 <_init>
  4005c5:	48 85 ed             	test   %rbp,%rbp
  4005c8:	74 1c                	je     4005e6 <__libc_csu_init+0x66>
  4005ca:	31 db                	xor    %ebx,%ebx
  4005cc:	0f 1f 40 00          	nopl   0x0(%rax)
  4005d0:	4c 89 fa             	mov    %r15,%rdx
  4005d3:	4c 89 f6             	mov    %r14,%rsi
  4005d6:	44 89 ef             	mov    %r13d,%edi
  4005d9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005dd:	48 83 c3 01          	add    $0x1,%rbx
  4005e1:	48 39 eb             	cmp    %rbp,%rbx
  4005e4:	72 ea                	jb     4005d0 <__libc_csu_init+0x50>
  4005e6:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4005eb:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4005f0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  4005f5:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  4005fa:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  4005ff:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400604:	48 83 c4 38          	add    $0x38,%rsp
  400608:	c3                   	retq   
  400609:	90                   	nop
  40060a:	90                   	nop
  40060b:	90                   	nop
  40060c:	90                   	nop
  40060d:	90                   	nop
  40060e:	90                   	nop
  40060f:	90                   	nop

0000000000400610 <__do_global_ctors_aux>:
  400610:	55                   	push   %rbp
  400611:	48 89 e5             	mov    %rsp,%rbp
  400614:	53                   	push   %rbx
  400615:	48 83 ec 08          	sub    $0x8,%rsp
  400619:	48 8b 05 50 01 20 00 	mov    0x200150(%rip),%rax        # 600770 <__CTOR_LIST__>
  400620:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400624:	74 19                	je     40063f <__do_global_ctors_aux+0x2f>
  400626:	bb 70 07 60 00       	mov    $0x600770,%ebx
  40062b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400630:	48 83 eb 08          	sub    $0x8,%rbx
  400634:	ff d0                	callq  *%rax
  400636:	48 8b 03             	mov    (%rbx),%rax
  400639:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40063d:	75 f1                	jne    400630 <__do_global_ctors_aux+0x20>
  40063f:	48 83 c4 08          	add    $0x8,%rsp
  400643:	5b                   	pop    %rbx
  400644:	c9                   	leaveq 
  400645:	c3                   	retq   
  400646:	90                   	nop
  400647:	90                   	nop

Disassembly of section .fini:

0000000000400648 <_fini>:
  400648:	48 83 ec 08          	sub    $0x8,%rsp
  40064c:	e8 df fd ff ff       	callq  400430 <__do_global_dtors_aux>
  400651:	48 83 c4 08          	add    $0x8,%rsp
  400655:	c3                   	retq   
